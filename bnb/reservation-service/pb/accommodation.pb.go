// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.0
// source: accommodation.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Accommodation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reservations []string `protobuf:"bytes,1,rep,name=reservations,proto3" json:"reservations,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// address
	Country      string   `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	Street       string   `protobuf:"bytes,4,opt,name=street,proto3" json:"street,omitempty"`
	StreetNum    string   `protobuf:"bytes,5,opt,name=streetNum,proto3" json:"streetNum,omitempty"`
	ZipCode      int32    `protobuf:"varint,6,opt,name=zipCode,proto3" json:"zipCode,omitempty"`
	Commodations []string `protobuf:"bytes,7,rep,name=commodations,proto3" json:"commodations,omitempty"`
	Photos       []string `protobuf:"bytes,8,rep,name=photos,proto3" json:"photos,omitempty"`
	Guests       int32    `protobuf:"varint,9,opt,name=guests,proto3" json:"guests,omitempty"`
	// time interval
	AvailabilityStartDate *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=availabilityStartDate,proto3" json:"availabilityStartDate,omitempty"`
	AvailabilityEndDate   *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=availabilityEndDate,proto3" json:"availabilityEndDate,omitempty"`
	// unit price
	Amount         float32                `protobuf:"fixed32,12,opt,name=amount,proto3" json:"amount,omitempty"`
	PriceStartDate *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=priceStartDate,proto3" json:"priceStartDate,omitempty"`
	PriceEndDate   *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=priceEndDate,proto3" json:"priceEndDate,omitempty"`
	PriceForPerson bool                   `protobuf:"varint,15,opt,name=priceForPerson,proto3" json:"priceForPerson,omitempty"`
	User           string                 `protobuf:"bytes,16,opt,name=user,proto3" json:"user,omitempty"`
	AutoApprove    bool                   `protobuf:"varint,17,opt,name=autoApprove,proto3" json:"autoApprove,omitempty"`
	Id             string                 `protobuf:"bytes,18,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Accommodation) Reset() {
	*x = Accommodation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Accommodation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Accommodation) ProtoMessage() {}

func (x *Accommodation) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Accommodation.ProtoReflect.Descriptor instead.
func (*Accommodation) Descriptor() ([]byte, []int) {
	return file_accommodation_proto_rawDescGZIP(), []int{0}
}

func (x *Accommodation) GetReservations() []string {
	if x != nil {
		return x.Reservations
	}
	return nil
}

func (x *Accommodation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Accommodation) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Accommodation) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *Accommodation) GetStreetNum() string {
	if x != nil {
		return x.StreetNum
	}
	return ""
}

func (x *Accommodation) GetZipCode() int32 {
	if x != nil {
		return x.ZipCode
	}
	return 0
}

func (x *Accommodation) GetCommodations() []string {
	if x != nil {
		return x.Commodations
	}
	return nil
}

func (x *Accommodation) GetPhotos() []string {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *Accommodation) GetGuests() int32 {
	if x != nil {
		return x.Guests
	}
	return 0
}

func (x *Accommodation) GetAvailabilityStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.AvailabilityStartDate
	}
	return nil
}

func (x *Accommodation) GetAvailabilityEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.AvailabilityEndDate
	}
	return nil
}

func (x *Accommodation) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Accommodation) GetPriceStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PriceStartDate
	}
	return nil
}

func (x *Accommodation) GetPriceEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PriceEndDate
	}
	return nil
}

func (x *Accommodation) GetPriceForPerson() bool {
	if x != nil {
		return x.PriceForPerson
	}
	return false
}

func (x *Accommodation) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Accommodation) GetAutoApprove() bool {
	if x != nil {
		return x.AutoApprove
	}
	return false
}

func (x *Accommodation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RequestAccommodationById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RequestAccommodationById) Reset() {
	*x = RequestAccommodationById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestAccommodationById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestAccommodationById) ProtoMessage() {}

func (x *RequestAccommodationById) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestAccommodationById.ProtoReflect.Descriptor instead.
func (*RequestAccommodationById) Descriptor() ([]byte, []int) {
	return file_accommodation_proto_rawDescGZIP(), []int{1}
}

func (x *RequestAccommodationById) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RequestAccommodationByHostId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RequestAccommodationByHostId) Reset() {
	*x = RequestAccommodationByHostId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestAccommodationByHostId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestAccommodationByHostId) ProtoMessage() {}

func (x *RequestAccommodationByHostId) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestAccommodationByHostId.ProtoReflect.Descriptor instead.
func (*RequestAccommodationByHostId) Descriptor() ([]byte, []int) {
	return file_accommodation_proto_rawDescGZIP(), []int{2}
}

func (x *RequestAccommodationByHostId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_accommodation_proto protoreflect.FileDescriptor

var file_accommodation_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaf, 0x05, 0x0a, 0x0d, 0x41,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74,
	0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x72, 0x65, 0x65,
	0x74, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x12, 0x50, 0x0a, 0x15, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x15, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x4c, 0x0a, 0x13, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x13, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x0e, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3e,
	0x0a, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x46, 0x6f, 0x72,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x75,
	0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x18,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x1c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0xb6, 0x01, 0x0a, 0x14, 0x41, 0x63, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x49, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x30,
	0x01, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x72, 0x72, 0x75, 0x7a, 0x69, 0x63, 0x69, 0x63, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x65, 0x74, 0x72,
	0x6f, 0x74, 0x74, 0x65, 0x72, 0x2f, 0x62, 0x6e, 0x62, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_accommodation_proto_rawDescOnce sync.Once
	file_accommodation_proto_rawDescData = file_accommodation_proto_rawDesc
)

func file_accommodation_proto_rawDescGZIP() []byte {
	file_accommodation_proto_rawDescOnce.Do(func() {
		file_accommodation_proto_rawDescData = protoimpl.X.CompressGZIP(file_accommodation_proto_rawDescData)
	})
	return file_accommodation_proto_rawDescData
}

var file_accommodation_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_accommodation_proto_goTypes = []interface{}{
	(*Accommodation)(nil),                // 0: pb.Accommodation
	(*RequestAccommodationById)(nil),     // 1: pb.RequestAccommodationById
	(*RequestAccommodationByHostId)(nil), // 2: pb.RequestAccommodationByHostId
	(*timestamppb.Timestamp)(nil),        // 3: google.protobuf.Timestamp
}
var file_accommodation_proto_depIdxs = []int32{
	3, // 0: pb.Accommodation.availabilityStartDate:type_name -> google.protobuf.Timestamp
	3, // 1: pb.Accommodation.availabilityEndDate:type_name -> google.protobuf.Timestamp
	3, // 2: pb.Accommodation.priceStartDate:type_name -> google.protobuf.Timestamp
	3, // 3: pb.Accommodation.priceEndDate:type_name -> google.protobuf.Timestamp
	1, // 4: pb.AccommodationService.GetAccommodationById:input_type -> pb.RequestAccommodationById
	2, // 5: pb.AccommodationService.GetAccommodationByHostId:input_type -> pb.RequestAccommodationByHostId
	0, // 6: pb.AccommodationService.GetAccommodationById:output_type -> pb.Accommodation
	0, // 7: pb.AccommodationService.GetAccommodationByHostId:output_type -> pb.Accommodation
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_accommodation_proto_init() }
func file_accommodation_proto_init() {
	if File_accommodation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_accommodation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Accommodation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestAccommodationById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestAccommodationByHostId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_accommodation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_accommodation_proto_goTypes,
		DependencyIndexes: file_accommodation_proto_depIdxs,
		MessageInfos:      file_accommodation_proto_msgTypes,
	}.Build()
	File_accommodation_proto = out.File
	file_accommodation_proto_rawDesc = nil
	file_accommodation_proto_goTypes = nil
	file_accommodation_proto_depIdxs = nil
}
